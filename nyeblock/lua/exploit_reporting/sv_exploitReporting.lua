util.AddNetworkString("ers_panel")
util.AddNetworkString("ers_createReport")
util.AddNetworkString("ers_saveImage")
util.AddNetworkString("ers_startImageSave")
util.AddNetworkString("ers_getAllReports")
util.AddNetworkString("ers_returnAllReports")
util.AddNetworkString("ers_getImage")
util.AddNetworkString("ers_returnImage")
util.AddNetworkString("ers_updateReportStatus")
util.AddNetworkString("ers_imageChunkReady")
util.AddNetworkString("ers_imageReady")

-- concommand.Add("ers_test",function(ply)
-- 	local tbl = {}

-- 	if !file.Exists("ers","DATA") then
-- 		file.CreateDir("ers/reports")
-- 		file.CreateDir("ers/images")
-- 	end

-- 	for k,v in pairs(file.Find("ers/reports/*.txt","DATA")) do
-- 		local data = util.JSONToTable(file.Read("ers/reports/"..v))
-- 		if data.steamid64 == ply:SteamID64() then
-- 			table.insert(tbl, data)
-- 		end
-- 	end

-- 	net.Start("ers_panel")
-- 		net.WriteTable(tbl)
-- 	net.Send(ply)
-- end)

net.Receive("ers_createReport",function(_,ply)
	local reportData = net.ReadTable()
	local imageCount = net.ReadString()

	if reportData.steamid64 == ply:SteamID64() then
		local id = table.Count(file.Find("ers/reports/*.txt","DATA")) + 1
		local tbl = {
			name = ply:Nick(),
			steamid64 = reportData.steamid64,
			description = reportData.description,
			submitted = os.time(),
			images = {},
			map = reportData.map,
			status = 1
		}

		for i=1,tonumber(imageCount) do
			local name = id.."_"..i..".txt"
			table.insert(tbl.images, name)
		end
		file.Write("ers/reports/"..id..".txt", util.TableToJSON(tbl))
		
		net.Start("ers_startImageSave")
			net.WriteString(id)
		net.Send(ply)
	end
end)

local savedImages = {}

net.Receive("ers_saveImage",function(_,ply)
	local reportId = net.ReadString()
	local imageId = net.ReadString()
	local totalLength = net.ReadString()

	if file.Exists("ers/reports/"..reportId..".txt","DATA") then
		local imageText = ""
		for i=1,61 do
			local dataLength = net.ReadString()
			local imageData = net.ReadData(dataLength)

			if imageData != "" then
				imageText = imageText..imageData
			end
		end

		if savedImages[reportId] == nil then
			savedImages[reportId] = {}
		end

		if savedImages[reportId][imageId] == nil then
			savedImages[reportId][imageId] = imageText
		else
			savedImages[reportId][imageId] = savedImages[reportId][imageId]..imageText
		end

		if #savedImages[reportId][imageId] >= tonumber(totalLength) then
			file.Write("ers/images/"..reportId.."_"..imageId..".txt", savedImages[reportId][imageId])
			net.Start("ers_imageReady")
			net.Send(ply)
			savedImages = {}
		else
			net.Start("ers_imageChunkReady")
			net.Send(ply)
		end
	end
end)

net.Receive("ers_getAllReports",function(_,ply)
	if ply:GetUserGroup() == "superadmin" then

		local tbl = {}

		for k,v in pairs(file.Find("ers/reports/*.txt","DATA")) do
			local data = util.JSONToTable(file.Read("ers/reports/"..v))
			data["id"] = string.Split(v,".")[1]
			table.insert(tbl,data)
		end

		net.Start("ers_returnAllReports")
			net.WriteTable(tbl)
		net.Send(ply)
	end
end)

net.Receive("ers_getImage",function(_,ply)
	if ply:GetUserGroup() == "superadmin" then
		local reportId = net.ReadString()
		local imageId = net.ReadString()
		local imageData = file.Read("ers/images/"..reportId.."_"..imageId..".txt")
		local chunks = #imageData/1024
		local posMin = 0
		local posMax = 1024

		local function sendNextChunk()
			net.Start("ers_returnImage")
				net.WriteString(#imageData)
				for i=1,63 do
					local chunk = string.sub(imageData,posMin,posMax)

					if chunk != "" then
						net.WriteString(#chunk)
						net.WriteData(chunk,#chunk)

						posMin = posMin + 1025
						posMax = posMax + 1025
					end
				end
			net.Send(ply)
		end
		net.Receive("ers_imageChunkReady",function(_,ply2)
			if ply2:SteamID64() == ply:SteamID64() then
				sendNextChunk()
			end
		end)
		sendNextChunk()
	end
end)

net.Receive("ers_updateReportStatus",function(_,ply)
	if ply:GetUserGroup() == "superadmin" then
		local reportId = net.ReadString()
		local status = tonumber(net.ReadString())

		for k,v in pairs(file.Find("ers/reports/*.txt","DATA")) do
			if string.Split(v,".")[1] == reportId then
				local data = util.JSONToTable(file.Read("ers/reports/"..v))
				data.status = status

				file.Write("ers/reports/"..reportId..".txt", util.TableToJSON(data))
			end
		end
	end
end)